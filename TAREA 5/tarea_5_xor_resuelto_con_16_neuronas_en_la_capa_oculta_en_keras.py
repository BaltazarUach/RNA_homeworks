# -*- coding: utf-8 -*-
"""TAREA 5_XOR Resuelto con 16 neuronas en la capa oculta en keras.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hom6I9Ke2VLiuNe6ub9DTcJobE-A8Mk_

#TAREA 5.                                     13-04-2025
#XOR resuelto con 16 neuronas en la capa oculta en Keras      
#POSGRADO EN INGENIERÍA AGRÍCOLA Y USO INTEGRAL DEL AGUA
#BALTAZAR LÓPEZ VELASCO
"""

import numpy as np
from keras.models import Sequential
from keras.layers import Dense

# Datos de entrada
training_data = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])

# Datos de salida
target_data = np.array([[0], [1], [1], [0]])

print(training_data)

print(target_data)

"""Declaramos la RNA con Keras"""

# Para resolver el problema de la or-exclusivo (XOR) se va a resolver con
# 16 neuronas en la capa oculta de Keras

model = Sequential()
model.add(Dense(16, input_dim=2, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.summary()

"""HYPERPARÁMETROS"""

# HYPERPARÁMETROS
model.compile(loss='mean_squared_error', optimizer='adam', metrics=['binary_accuracy'])

# ENTRENAMOS
model.fit(training_data, target_data, epochs=2500, verbose=2)

"""Evaluación del modelo"""

# EVALUAMOS
scores = model.evaluate(training_data, target_data)
print("\n%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))
print(model.predict(training_data).round())

"""Pesos y sesgo"""

# PESOS Y SESGO

print("\nPesos y sesgos del modelo:")
for i, layer in enumerate(model.layers):
    weights, biases = layer.get_weights()
    print(f"\nCapa {i + 1} - Pesos:\n{weights}")
    print(f"Capa {i + 1} - Sesgos:\n{biases}")

